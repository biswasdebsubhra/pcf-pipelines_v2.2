jobs:
- name: bootstrap-terraform-state
  plan:
  - do:
    - get: pcf-pipelines-tarball
    - config:
        image_resource:
          source:
            repository: pcfnorm/rootfs
            tag: 1.0.15
          type: docker-image
        inputs:
        - name: pcf-pipelines-tarball
        outputs:
        - name: pcf-pipelines
        platform: linux
        run:
          args:
          - -c
          - tar -xvf pcf-pipelines-tarball/*.tgz
          path: bash
      task: unpack-tarball
  - file: pcf-pipelines/tasks/create-initial-terraform-state/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      S3_BUCKET_TERRAFORM: {{S3_OUTPUT_BUCKET}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      S3_REGION: {{aws_region}}
    task: create-terraform-state
  serial_groups:
  - terraform
- name: create-infrastructure
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: terraform-state
    - get: pivnet-opsmgr
      params:
        globs:
        - '*AWS.yml'
  - config:
      image_resource:
        source:
          repository: pcfnorm/rootfs
          tag: 1.0.15
        type: docker-image
      inputs:
      - name: pivnet-opsmgr
      outputs:
      - name: ami
      params:
        REGION: null
      platform: linux
      run:
        args:
        - -c
        - |
          ami=$(grep $REGION pivnet-opsmgr/*.yml | cut -d' ' -f2)
          echo $ami > ami/ami
        path: bash
    params:
      REGION: {{aws_region}}
    task: find-ami
  - ensure:
      params:
        file: terraform-state-output/terraform.tfstate
      put: terraform-state
    file: pcf-pipelines/install-pcf/aws/tasks/prepare-aws/task.yml
    params:
      DB_MASTER_PASSWORD: {{db_master_password}}
      DB_MASTER_USERNAME: {{db_master_username}}
      OPSMAN_ALLOW_HTTPS_CIDR_RANGES: {{opsman_allow_https_cidr_ranges}}
      OPSMAN_ALLOW_SSH_CIDR_RANGES: {{opsman_allow_ssh_cidr_ranges}}
      TERRAFORM_PREFIX: {{terraform_prefix}}
      amis_nat: {{amis_nat}}
      apps_domain: {{apps_domain}}
      aws_access_key_id: {{aws_access_key_id}}
      aws_az1: {{aws_az1}}
      aws_az2: {{aws_az2}}
      aws_az3: {{aws_az3}}
      aws_cert_arn: {{aws_cert_arn}}
      aws_key_name: {{aws_key_name}}
      aws_region: {{aws_region}}
      aws_secret_access_key: {{aws_secret_access_key}}
      dynamic_services_subnet_cidr_az1: {{dynamic_services_subnet_cidr_az1}}
      dynamic_services_subnet_cidr_az2: {{dynamic_services_subnet_cidr_az2}}
      dynamic_services_subnet_cidr_az3: {{dynamic_services_subnet_cidr_az3}}
      ert_subnet_cidr_az1: {{ert_subnet_cidr_az1}}
      ert_subnet_cidr_az2: {{ert_subnet_cidr_az2}}
      ert_subnet_cidr_az3: {{ert_subnet_cidr_az3}}
      infra_subnet_cidr_az1: {{infra_subnet_cidr_az1}}
      nat_ip_az1: {{nat_ip_az1}}
      nat_ip_az2: {{nat_ip_az2}}
      nat_ip_az3: {{nat_ip_az3}}
      opsman_ip_az1: {{opsman_ip_az1}}
      public_subnet_cidr_az1: {{public_subnet_cidr_az1}}
      public_subnet_cidr_az2: {{public_subnet_cidr_az2}}
      public_subnet_cidr_az3: {{public_subnet_cidr_az3}}
      rds_subnet_cidr_az1: {{rds_subnet_cidr_az1}}
      rds_subnet_cidr_az2: {{rds_subnet_cidr_az2}}
      rds_subnet_cidr_az3: {{rds_subnet_cidr_az3}}
      route53_zone_id: {{ROUTE_53_ZONE_ID}}
      services_subnet_cidr_az1: {{services_subnet_cidr_az1}}
      services_subnet_cidr_az2: {{services_subnet_cidr_az2}}
      services_subnet_cidr_az3: {{services_subnet_cidr_az3}}
      system_domain: {{system_domain}}
      vpc_cidr: {{vpc_cidr}}
    task: create-infrastructure
  - file: pcf-pipelines/install-pcf/aws/tasks/prepare-rds/task.yml
    params:
      DB_ACCOUNTDB_PASSWORD: {{db_accountdb_password}}
      DB_ACCOUNTDB_USERNAME: {{db_accountdb_username}}
      DB_APP_USAGE_SERVICE_PASSWORD: {{db_app_usage_service_password}}
      DB_APP_USAGE_SERVICE_USERNAME: {{db_app_usage_service_username}}
      DB_AUTOSCALE_PASSWORD: {{db_autoscale_password}}
      DB_AUTOSCALE_USERNAME: {{db_autoscale_username}}
      DB_CCDB_PASSWORD: {{db_ccdb_password}}
      DB_CCDB_USERNAME: {{db_ccdb_username}}
      DB_DIEGO_PASSWORD: {{db_diego_password}}
      DB_DIEGO_USERNAME: {{db_diego_username}}
      DB_LOCKET_PASSWORD: {{db_locket_password}}
      DB_LOCKET_USERNAME: {{db_locket_username}}
      DB_NETWORKPOLICYSERVERDB_PASSWORD: {{db_networkpolicyserverdb_password}}
      DB_NETWORKPOLICYSERVERDB_USERNAME: {{db_networkpolicyserverdb_username}}
      DB_NFSVOLUMEDB_PASSWORD: {{db_nfsvolumedb_password}}
      DB_NFSVOLUMEDB_USERNAME: {{db_nfsvolumedb_username}}
      DB_NOTIFICATIONS_PASSWORD: {{db_notifications_password}}
      DB_NOTIFICATIONS_USERNAME: {{db_notifications_username}}
      DB_ROUTING_PASSWORD: {{db_routing_password}}
      DB_ROUTING_USERNAME: {{db_routing_username}}
      DB_SILK_PASSWORD: {{db_silk_password}}
      DB_SILK_USERNAME: {{db_silk_username}}
      DB_UAA_PASSWORD: {{db_uaa_password}}
      DB_UAA_USERNAME: {{db_uaa_username}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      PEM: {{PEM}}
    task: prepare-rds
  serial_groups:
  - terraform
- name: configure-director
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: terraform-state
      passed:
      - create-infrastructure
      trigger: true
  - file: pcf-pipelines/tasks/config-opsman/task.yml
    params:
      OM_DECRYPTION_PWD: {{opsman_admin_password}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
    task: config-opsman-auth
  - file: pcf-pipelines/install-pcf/aws/tasks/config-director/task.yml
    params:
      AWS_KEY_NAME: {{aws_key_name}}
      AWS_REGION: {{aws_region}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USER: {{opsman_admin_username}}
      PEM: {{PEM}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      TRUSTED_CERTIFICATES: {{director_certificates}}
      dynamic_services_subnet_reserved_ranges_z1: {{dynamic_services_subnet_reserved_ranges_z1}}
      dynamic_services_subnet_reserved_ranges_z2: {{dynamic_services_subnet_reserved_ranges_z2}}
      dynamic_services_subnet_reserved_ranges_z3: {{dynamic_services_subnet_reserved_ranges_z3}}
      ert_subnet_reserved_ranges_z1: {{ert_subnet_reserved_ranges_z1}}
      ert_subnet_reserved_ranges_z2: {{ert_subnet_reserved_ranges_z2}}
      ert_subnet_reserved_ranges_z3: {{ert_subnet_reserved_ranges_z3}}
      infra_subnet_reserved_ranges_z1: {{infra_subnet_reserved_ranges_z1}}
      services_subnet_reserved_ranges_z1: {{services_subnet_reserved_ranges_z1}}
      services_subnet_reserved_ranges_z2: {{services_subnet_reserved_ranges_z2}}
      services_subnet_reserved_ranges_z3: {{services_subnet_reserved_ranges_z3}}
    task: configure-director
  serial_groups:
  - opsman
- name: deploy-director
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: terraform-state
      passed:
      - configure-director
      trigger: true
  - file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: deploy-director
  serial_groups:
  - opsman
- name: upload-ert
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: pivnet-product
      params:
        globs:
        - cf*.pivotal
      resource: pivnet-elastic-runtime
    - get: terraform-state
      passed:
      - deploy-director
      trigger: true
  - file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: aws
      NO_PROXY: ""
      OM_IP: ""
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      PIVNET_API_TOKEN: {{pivnet_token}}
    task: upload-tile
  - file: pcf-pipelines/tasks/stage-product/task.yml
    params:
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: stage-tile
  serial_groups:
  - opsman
- name: deploy-ert
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: terraform-state
      passed:
      - upload-ert
      trigger: true
  - file: pcf-pipelines/tasks/configure-ert/task.yml
    params:
      APPS_DOMAIN: {{apps_domain}}
      CONTAINER_NETWORKING_NW_CIDR: {{container_networking_nw_cidr}}
      CREDHUB_PRIMARY_ENCRYPTION_NAME: {{credhub_primary_encryption_name}}
      CREDUB_ENCRYPTION_KEY_NAME1: {{credhub_encryption_key_name1}}
      CREDUB_ENCRYPTION_KEY_NAME2: {{credhub_encryption_key_name2}}
      CREDUB_ENCRYPTION_KEY_NAME3: {{credhub_encryption_key_name3}}
      CREDUB_ENCRYPTION_KEY_SECRET1: {{credhub_encryption_key_secret1}}
      CREDUB_ENCRYPTION_KEY_SECRET2: {{credhub_encryption_key_secret2}}
      CREDUB_ENCRYPTION_KEY_SECRET3: {{credhub_encryption_key_secret3}}
      FRONTEND_IDLE_TIMEOUT: {{frontend_idle_timeout}}
      HAPROXY_BACKEND_CA: {{haproxy_backend_ca}}
      HAPROXY_FORWARD_TLS: {{haproxy_forward_tls}}
      HAPROXY_TLS_CIPHERS: {{haproxy_tls_ciphers}}
      INTERNET_CONNECTED: {{internet_connected}}
      OPS_MGR_PWD: {{opsman_admin_password}}
      OPS_MGR_USR: {{opsman_admin_username}}
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      PCF_ERT_DOMAIN: {{pcf_ert_domain}}
      POE_SSL_CERT1: {{poe_ssl_cert1}}
      POE_SSL_KEY1: {{poe_ssl_key1}}
      POE_SSL_NAME1: {{poe_ssl_name1}}
      ROUTER_TLS_CIPHERS: {{router_tls_ciphers}}
      ROUTING_CUSTOM_CA_CERTIFICATES: {{routing_custom_ca_certificates}}
      ROUTING_TLS_TERMINATION: {{routing_tls_termination}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      SECURITY_ACKNOWLEDGEMENT: {{security_acknowledgement}}
      SYSTEM_DOMAIN: {{system_domain}}
      db_accountdb_password: {{db_accountdb_password}}
      db_accountdb_username: {{db_accountdb_username}}
      db_app_usage_service_password: {{db_app_usage_service_password}}
      db_app_usage_service_username: {{db_app_usage_service_username}}
      db_autoscale_password: {{db_autoscale_password}}
      db_autoscale_username: {{db_autoscale_username}}
      db_ccdb_password: {{db_ccdb_password}}
      db_ccdb_username: {{db_ccdb_username}}
      db_diego_password: {{db_diego_password}}
      db_diego_username: {{db_diego_username}}
      db_locket_password: {{db_locket_password}}
      db_locket_username: {{db_locket_username}}
      db_networkpolicyserverdb_password: {{db_networkpolicyserverdb_password}}
      db_networkpolicyserverdb_username: {{db_networkpolicyserverdb_username}}
      db_nfsvolumedb_password: {{db_nfsvolumedb_password}}
      db_nfsvolumedb_username: {{db_nfsvolumedb_username}}
      db_notifications_password: {{db_notifications_password}}
      db_notifications_username: {{db_notifications_username}}
      db_routing_password: {{db_routing_password}}
      db_routing_username: {{db_routing_username}}
      db_silk_password: {{db_silk_password}}
      db_silk_username: {{db_silk_username}}
      db_uaa_password: {{db_uaa_password}}
      db_uaa_username: {{db_uaa_username}}
      gcp_storage_access_key: null
      gcp_storage_secret_key: null
      mysql_monitor_recipient_email: {{mysql_monitor_recipient_email}}
      pcf_az_1: {{aws_az1}}
      pcf_az_2: {{aws_az2}}
      pcf_az_3: {{aws_az3}}
      pcf_iaas: aws
      routing_disable_http: {{routing_disable_http}}
      terraform_prefix: {{terraform_prefix}}
    task: configure-ert
  - file: pcf-pipelines/tasks/disable-errands/task.yml
    params:
      ERRANDS_TO_DISABLE: {{ert_errands_to_disable}}
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
      PRODUCT_NAME: cf
    task: disable-errands
  - file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_CLIENT_ID: ""
      OPSMAN_CLIENT_SECRET: ""
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: deploy-ert
  serial_groups:
  - opsman
- ensure:
    params:
      file: terraform-state/terraform.tfstate
    put: terraform-state
  name: wipe-env
  plan:
  - aggregate:
    - do:
      - get: pcf-pipelines-tarball
      - config:
          image_resource:
            source:
              repository: pcfnorm/rootfs
              tag: 1.0.15
            type: docker-image
          inputs:
          - name: pcf-pipelines-tarball
          outputs:
          - name: pcf-pipelines
          platform: linux
          run:
            args:
            - -c
            - tar -xvf pcf-pipelines-tarball/*.tgz
            path: bash
        task: unpack-tarball
    - get: terraform-state
  - file: pcf-pipelines/install-pcf/aws/tasks/wipe-env/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_REGION: {{aws_region}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      OPSMAN_DOMAIN_OR_IP_ADDRESS: {{opsman_domain_or_ip_address}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_USERNAME: {{opsman_admin_username}}
    task: wipe
  serial_groups:
  - terraform
resource_types:
- name: pivnet
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
  type: docker-image
resources:
- name: terraform-state
  source:
    access_key_id: {{aws_access_key_id}}
    bucket: {{S3_OUTPUT_BUCKET}}
    disable_ssl: false
    endpoint: {{S3_ENDPOINT}}
    region_name: {{aws_region}}
    secret_access_key: {{aws_secret_access_key}}
    versioned_file: terraform.tfstate
  type: s3
- name: pivnet-elastic-runtime
  source:
    api_token: {{pivnet_token}}
    product_slug: elastic-runtime
    product_version: {{ert_major_minor_version}}
    sort_by: semver
  type: pivnet
- name: pcf-pipelines-tarball
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    product_version: v0.23.6
  type: pivnet
- name: pivnet-opsmgr
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
    product_version: {{opsman_major_minor_version}}
    sort_by: semver
  type: pivnet
